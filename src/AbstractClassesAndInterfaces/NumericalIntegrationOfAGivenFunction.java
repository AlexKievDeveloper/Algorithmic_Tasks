package AbstractClassesAndInterfaces;

import java.util.function.DoubleUnaryOperator;

/*Реализуйте метод, выполняющий численное интегрирование заданной функции на заданном интервале по формуле левых
 прямоугольников.
Функция задана объектом, реализующим интерфейс java.util.function.DoubleUnaryOperator. Его метод applyAsDouble()
        принимает значение аргумента и возвращает значение функции в заданной точке.

Интервал интегрирования задается его конечными точками a и b, причем a <=b. Для получения достаточно
        точного результата используйте шаг сетки не больше 10^{-6}10−6.

        Пример. Вызов
        integrate(x -> 1, 0, 10)
        должен возвращать значение 10.

        P.S. Если задача слишком легкая, то дополнительно можете реализовать динамический выбор шага сетки
        по следующему алгоритму:

        Вычислить приближенное значение интеграла функции при начальном значении шага сетки (например, 1).
        Вычислить приближенное значение интеграла функции при более мелком шаге сетки
        (например, уменьшить шаг сетки в два раза).
        Если разность двух последовательных приближений интеграла функции достаточно мала, то завершаем алгоритм
        и возвращаем текущее приближение в качестве результата.
        Иначе возвращаемся к шагу 2.*/

public class NumericalIntegrationOfAGivenFunction {
    public static double integrate(DoubleUnaryOperator f, double a, double b) {
        double x;
        double y = 0;
        double h = 1e-6;
        double s = 0;
        double s2 = 0;

        for (int i = 0; i < 1e8; i++) {
            if (a < b) { //проверяем что наше а ещё не стало равным b
                y = +f.applyAsDouble(a); //узнаём верхнюю точку прямоугольника -ВЫСОТА ТОЧКИ
                a = a + h;//увеличиваем значение а на ширину прямоугольника
                s = h * y; //находим площадь одного из мелких прямоугольников умножая ширину на высоту
                s2 += s; //суммируем площади всех мелких прямоугольников
            }
        }
        return s2;
    }

}
